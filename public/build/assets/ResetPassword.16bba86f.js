import{u as q,e as I,x as h,f as S,y as k,g as L,l as d,i as w,j as A,z as N,A as P,k as C,r as f,o as E,c as U,a as t,w as m,m as r,q as x,t as D,s as G,v as R,B as j}from"./main.d0ffa6eb.js";const z=["onSubmit"],T={setup(F){const v=q(),{t:n}=I(),c=h(),$=S(),o=k({email:"",password:"",password_confirmation:""}),u=L(!1),_=d(()=>({email:{required:w,email:A},password:{required:w,minLength:N(8)},password_confirmation:{sameAsPassword:P(o.password)}})),a=C(_,o),g=d(()=>a.value.email.$error?a.value.email.required.$invalid?n("validation.required"):a.value.email.email?n("validation.email_incorrect"):!1:""),b=d(()=>a.value.password.$error?a.value.password.required.$invalid?n("validation.required"):a.value.password.minLength?n("validation.password_min_length",{count:a.value.password.minLength.$params.min}):!1:""),y=d(()=>a.value.password_confirmation.$error?a.value.password_confirmation.sameAsPassword.$invalid?n("validation.password_incorrect"):!1:"");async function V(i){if(a.value.$touch(),!a.value.$invalid)try{let e={email:o.email,password:o.password,password_confirmation:o.password_confirmation,token:c.params.token};u.value=!0;let l=await R.post("/api/v1/auth/reset/password",e);u.value=!1,l.data&&(v.showNotification({type:"success",message:n("login.password_reset_successfully")}),$.push("/login"))}catch(e){j(e),u.value=!1,e.response&&e.response.status===403}}return(i,e)=>{const l=f("BaseInput"),p=f("BaseInputGroup"),B=f("BaseButton");return E(),U("form",{id:"loginForm",onSubmit:G(V,["prevent"])},[t(p,{error:r(g),label:i.$t("login.email"),class:"mb-4",required:""},{default:m(()=>[t(l,{modelValue:r(o).email,"onUpdate:modelValue":e[0]||(e[0]=s=>r(o).email=s),invalid:r(a).email.$error,focus:"",type:"email",name:"email",onInput:e[1]||(e[1]=s=>r(a).email.$touch())},null,8,["modelValue","invalid"])]),_:1},8,["error","label"]),t(p,{error:r(b),label:i.$t("login.password"),class:"mb-4",required:""},{default:m(()=>[t(l,{modelValue:r(o).password,"onUpdate:modelValue":e[2]||(e[2]=s=>r(o).password=s),invalid:r(a).password.$error,type:"password",name:"password",onInput:e[3]||(e[3]=s=>r(a).password.$touch())},null,8,["modelValue","invalid"])]),_:1},8,["error","label"]),t(p,{error:r(y),label:i.$t("login.retype_password"),class:"mb-4",required:""},{default:m(()=>[t(l,{modelValue:r(o).password_confirmation,"onUpdate:modelValue":e[4]||(e[4]=s=>r(o).password_confirmation=s),invalid:r(a).password_confirmation.$error,type:"password",name:"password",onInput:e[5]||(e[5]=s=>r(a).password_confirmation.$touch())},null,8,["modelValue","invalid"])]),_:1},8,["error","label"]),t(B,{loading:u.value,type:"submit",variant:"primary"},{default:m(()=>[x(D(i.$t("login.reset_password")),1)]),_:1},8,["loading"])],40,z)}}};export{T as default};
